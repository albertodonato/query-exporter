[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools",
]

[project]
name = "query-exporter"
description = "Export Prometheus metrics generated from SQL queries"
readme = "README.rst"
keywords = [
  "exporter",
  "metric",
  "prometheus",
  "sql",
]
license = { file = "LICENSE.txt" }
maintainers = [
  { name = "Alberto Donato", email = "alberto.donato@gmail.com" },
]
authors = [
  { name = "Alberto Donato", email = "alberto.donato@gmail.com" },
]
requires-python = ">=3.11"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Framework :: AsyncIO",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: GNU General Public License (GPL)",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Database",
  "Topic :: System :: Monitoring",
  "Topic :: Utilities",
]
dynamic = [
  "version",
]
dependencies = [
  "aiohttp",
  "argcomplete",
  "croniter",
  "jsonschema",
  "prometheus-aioexporter>=2,<3",
  "prometheus-client",
  "python-dateutil",
  "pyyaml",
  "sqlalchemy>=2",
  "toolrack>=4",
]
optional-dependencies.testing = [
  "pytest",
  "pytest-asyncio",
  "pytest-mock",
]
urls.changelog = "https://github.com/albertodonato/query-exporter/blob/main/CHANGES.rst"
urls.homepage = "https://github.com/albertodonato/query-exporter"
urls.repository = "https://github.com/albertodonato/query-exporter"
scripts.query-exporter = "query_exporter.main:script"

[tool.setuptools.dynamic]
version = { attr = "query_exporter.__version__" }

[tool.setuptools.packages.find]
include = [ "query_exporter*" ]

[tool.setuptools.package-data]
query_exporter = [ "py.typed", "schemas/*" ]

[tool.ruff]
line-length = 79

lint.select = [ "I", "RUF", "UP" ]
lint.isort.combine-as-imports = true
lint.isort.force-sort-within-sections = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.report]
fail_under = 100.0
show_missing = true
skip_covered = true

[tool.coverage.run]
source = [ "query_exporter" ]
omit = [
  "query_exporter/main.py",
]

[tool.mypy]
ignore_missing_imports = true
install_types = true
non_interactive = true
strict = true
